{"version":3,"sources":["constants/ActionsTypes.js","components/LandingPage.js","components/index.js","actions/LandingActions.js","constants/ApiConstants.js","utils/utils.js","App.js","reportWebVitals.js","reducers/LandingReducers.js","reducers/index.js","index.js"],"names":["IS_LOADING","ON_SUCCESS_FETCH_PLANET","LandingPage","this","props","LandingAction","isLoading","data","tabList","favList","selectedTab","className","map","tab","isSelected","onClick","handleTabSelection","name","planet","isFavourite","Button","variant","handleUpdateFavList","length","handleRemoveFav","id","Component","connect","LandingReducers","dispatch","type","axios","get","then","res","status","payload","list","updatedlist","result","item","updateTabList","prevList","updatedList","updatedIntialListData","newFavList","updateAddFavList","updatedInitalList","updateInitalListAfterRemove","filter","toString","updateRemoveFavList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","combineReducers","state","action","store","createStore","reducer","applyMiddleware","thunks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAa,aACbC,EAA0B,0B,gBCOjCC,E,kLAEJC,KAAKC,MAAMC,kB,+BAGF,IAAD,SACiDF,KAAKC,MAAvDE,EADC,EACDA,UAAWC,EADV,EACUA,KAAMC,EADhB,EACgBA,QAASC,EADzB,EACyBA,QAASC,EADlC,EACkCA,YAC1C,OAAGJ,EAED,8BACC,+CAKD,gCACC,qBAAKK,UAAU,OAAf,SACEH,EAAQI,KAAI,SAACC,GAAD,OACZ,oBACCF,UAAWE,EAAIC,WAAa,WAAa,aACzCC,QAAS,kBAAM,EAAKX,MAAMY,mBAAmBH,EAAII,KAAMT,IAFxD,SAIEK,EAAII,YAIS,QAAhBP,EACA,qBAAKC,UAAU,YAAf,SACEJ,EAAKK,KAAI,SAACM,GAAD,OACT,sBAAKP,UAAWO,EAAOC,YAAc,WAAa,OAAlD,UACC,6BAAKD,EAAOD,OACVC,EAAOC,YASL,KARH,cAACC,EAAA,EAAD,CACCC,QAAQ,UACRN,QAAS,kBACR,EAAKX,MAAMkB,oBAAoBJ,EAAQT,EAASF,IAHlD,gCAaH,sBAAKI,UAAU,YAAf,UACEF,GAA8B,IAAnBA,EAAQc,OAAe,gDAA0B,KAC5Dd,GAA8B,IAAnBA,EAAQc,QAAgBd,EAAQG,KAAI,SAACM,GAAD,OAC/C,sBAAKP,UAAU,OAAf,UACC,6BAAKO,EAAOD,OACZ,cAACG,EAAA,EAAD,CACCC,QAAQ,SACRN,QAAS,kBACR,EAAKX,MAAMoB,gBAAgBN,EAAOO,GAAIhB,EAASF,IAHjD,6C,GAlDgBmB,aCTXxB,EDwFAyB,aAXS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAEzB,MAAO,CACNtB,UAFwDsB,EAAlDtB,UAGNC,KAHwDqB,EAAvCrB,KAIjBC,QAJwDoB,EAAjCpB,QAKvBC,QALwDmB,EAAxBnB,QAMhCC,YANwDkB,EAAflB,eAUH,CACvCL,cE5E4B,WAC3B,OAAO,SAACwB,GACNA,EAAS,CAACC,KAAM9B,IAChB+B,IAAMC,IClBkB,oDDkBAC,MAAK,SAACC,GACT,MAAfA,EAAIC,QACNN,EAAS,CAACC,KAAM7B,EAAyBmC,QAASF,EAAI3B,YFwE7DS,mBElEiC,SAACC,EAAMoB,GACvC,OAAO,SAACR,GACN,IAAIS,EEtBqB,SAACb,EAAIY,GAChC,IAAIE,EAASF,EAQb,OAPAE,EAAO3B,KAAI,SAAA4B,GACNA,EAAKvB,OAASQ,EACfe,EAAK1B,YAAa,EAElB0B,EAAK1B,YAAa,KAGfyB,EFaaE,CAAcxB,EAAMoB,GACtCR,EAAS,CACPC,KAAM,uBACNM,QAAS,CAAC1B,YAAaO,EAAMoB,KAAK,YAAKC,QF8D5ChB,oBEzDkC,SAACJ,EAAQT,EAASiC,GACnD,OAAO,SAACb,GACN,IAAIc,EEd6B,SAACzB,EAAQwB,GAC5C,IAAIH,EAASG,EAMb,OALAH,EAAO3B,KAAI,SAAA4B,GACNA,EAAKf,KAAOP,EAAOO,KACpBe,EAAKrB,aAAc,MAGhBoB,EFOaK,CAAsB1B,EAAQwB,GAEhDb,EAAS,CAACC,KAAM,kBAAmBM,QAAS,CAACS,WEtBjB,SAAC3B,EAAQT,GAGvC,MADO,sBAAOA,GAAP,CAAgBS,IFmBJ4B,CAAiB5B,EAAQT,GACekC,mBFsD5DnB,gBElD8B,SAACC,EAAIhB,EAASiC,GAC3C,OAAO,SAACb,GACN,IAAIkB,EELmC,SAAC7B,EAAQwB,GAClD,IAAIH,EAASG,EAMb,OALAH,EAAO3B,KAAI,SAAA4B,GACNA,EAAKf,KAAOP,IACbsB,EAAKrB,aAAc,MAGhBoB,EFFmBS,CAA4BvB,EAAIiB,GAExDb,EAAS,CAACC,KAAM,aAAcM,QAAS,CAACO,YEbT,SAAClB,EAAIY,GAGtC,OAFcA,EACOY,QAAO,SAAAT,GAAI,OAAIA,EAAKf,KAAOA,EAAGyB,cFU/BC,CAAoB1B,EAAIhB,GACWsC,0BF0C1CpB,CAKZzB,GKpFYkD,MARf,WACE,OACE,qBAAKzC,UAAU,MAAf,SACE,cAAC,EAAD,OCMS0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,sBCCRO,EAAgB,CACpBtD,KAAM,GACND,WAAW,EACXE,QHXqB,CACrB,CAACS,KAAM,MAAOH,YAAY,GAC1B,CAACG,KAAM,MAAOH,YAAY,IGU1BL,QAAS,GACTC,YAAa,OCVAoD,kBAAgB,CAC9BlC,gBDYc,WAAyD,IAAhCmC,EAA+B,uDAAvBF,EAAeG,EAAQ,uCACrE,OAAQA,EAAOlC,MACb,KAAK9B,EACH,OAAO,2BACF+D,GADL,IAEEzD,WAAW,IAEf,KAAKL,EACH,OAAO,2BACF8D,GADL,IAEEzD,WAAW,EACXC,KAAMyD,EAAO5B,UAEjB,IAAK,uBACH,OAAO,2BACF2B,GADL,IAEEvD,QAASwD,EAAO5B,QAAQC,KACxB3B,YAAasD,EAAO5B,QAAQ1B,cAEhC,IAAK,kBACH,OAAO,2BACFqD,GADL,IAEEtD,QAASuD,EAAO5B,QAAQS,WACxBtC,KAAMyD,EAAO5B,QAAQO,cAEzB,IAAK,aACH,OAAO,2BACFoB,GADL,IAEEtD,QAASuD,EAAO5B,QAAQO,YACxBpC,KAAMyD,EAAO5B,QAAQW,oBAEzB,QACE,OAAOgB,MErCPE,EAAQC,YAAYC,EAAS,GAAIC,YAAgBC,MAEvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.3f332c2b.chunk.js","sourcesContent":["\nexport const API_BASE_URL = '';\n\nexport const IS_LOADING = 'is_loading';\nexport const ON_SUCCESS_FETCH_PLANET = 'on_success_fetch_planet';\nexport const ON_FAILURE_FETCH_PLANET = 'on_gailure_fetch_planet';\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n\tLandingAction,\n\thandleTabSelection,\n\thandleUpdateFavList,\n\thandleRemoveFav,\n} from '../actions/LandingActions';\nimport './LandingPage.css';\nimport {Button} from 'react-bootstrap';\n\nclass LandingPage extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.LandingAction();\n\t}\n\n\trender() {\n\t\tconst {isLoading, data, tabList, favList, selectedTab} = this.props;\n\t\tif(isLoading) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Loading....</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div className='tabs'>\n\t\t\t\t\t\t{tabList.map((tab) => (\n\t\t\t\t\t\t\t<h3\n\t\t\t\t\t\t\t\tclassName={tab.isSelected ? 'tabs-sel' : 'tabs-unsel'}\n\t\t\t\t\t\t\t\tonClick={() => this.props.handleTabSelection(tab.name, tabList)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{tab.name}\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t{selectedTab === 'All' ? (\n\t\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t\t{data.map((planet) => (\n\t\t\t\t\t\t\t\t<div className={planet.isFavourite ? 'card sel' : 'card'}>\n\t\t\t\t\t\t\t\t\t<h4>{planet.name}</h4>\n\t\t\t\t\t\t\t\t\t{!planet.isFavourite ? (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant='success'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.handleUpdateFavList(planet, favList, data)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd to fav\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t\t\t{favList && favList.length === 0 ? <h1>Empty fav list</h1> : null}\n\t\t\t\t\t\t\t\t{favList && favList.length !== 0 && favList.map((planet) => (\n\t\t\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t\t\t<h5>{planet.name}</h5>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant='danger'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.handleRemoveFav(planet.id, favList, data)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tRemove from fav\n                  </Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nconst mapStateToProps = ({LandingReducers}) => {\n\tconst {isLoading, data, tabList, favList, selectedTab} = LandingReducers;\n\treturn {\n\t\tisLoading,\n\t\tdata,\n\t\ttabList,\n\t\tfavList,\n\t\tselectedTab,\n\t};\n};\n\nexport default connect(mapStateToProps, {\n\tLandingAction,\n\thandleTabSelection,\n\thandleUpdateFavList,\n\thandleRemoveFav,\n})(LandingPage);\n","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import axios from 'axios';\nimport {\n  ON_SUCCESS_FETCH_PLANET,\n  IS_LOADING,\n  ON_FAILURE_FETCH_PLANET,\n} from '../constants/ActionsTypes';\nimport {API_BASE_URL} from '../constants/ApiConstants';\nimport {\n  updateTabList,\n  updateAddFavList,\n  updatedIntialListData,\n  updateRemoveFavList,\n  updateInitalListAfterRemove,\n} from '../utils/utils';\n\nexport const LandingAction = () => {\n  return (dispatch) => {\n    dispatch({type: IS_LOADING});\n    axios.get(API_BASE_URL).then((res) => {\n      if (res.status === 200) {\n        dispatch({type: ON_SUCCESS_FETCH_PLANET, payload: res.data});\n      }\n    });\n  };\n};\n\nexport const handleTabSelection = (name, list) => {\n  return (dispatch) => {\n    let updatedlist = updateTabList(name, list);\n    dispatch({\n      type: 'HANDLE_TAB_SELECTION',\n      payload: {selectedTab: name, list: [...updatedlist]},\n    });\n  };\n};\n\nexport const handleUpdateFavList = (planet, favList, prevList) => {\n  return (dispatch) => {\n    let updatedList = updatedIntialListData(planet, prevList);\n    let newFavList = updateAddFavList(planet, favList);\n    dispatch({type: 'ADD_TO_FAV_LIST', payload: {newFavList, updatedList}});\n  };\n};\n\nexport const handleRemoveFav = (id, favList, prevList) => {\n  return (dispatch) => {\n    let updatedInitalList = updateInitalListAfterRemove(id, prevList);\n    let updatedList = updateRemoveFavList(id, favList);\n    dispatch({type: 'REMOVE_FAV', payload: {updatedList, updatedInitalList}});\n  };\n};\n","export const API_BASE_URL = 'http://assignment-machstatz.herokuapp.com/planet';\n","export const tabName = [\n  {name: 'All', isSelected: true},\n  {name: 'fav', isSelected: false},\n];\n\n\nexport const updateTabList = (id, list) => {\n  let result = list;\n  result.map(item => {\n    if(item.name === id) {\n      item.isSelected = true\n    } else {\n      item.isSelected = false\n    }\n  })\n  return result;\n}\n\nexport const updateAddFavList = (planet, favList) => {\n  let newList = [];\n  newList = [...favList, planet];\n  return newList;\n}\n\nexport const updatedIntialListData = (planet, prevList) => {\n  let result = prevList;\n  result.map(item => {\n    if(item.id === planet.id) {\n      item.isFavourite = true\n    }\n  })\n  return result;\n}\n\n\nexport const updateRemoveFavList = (id, list) => {\n  let newList = list;\n  let result = newList.filter(item => item.id !== id.toString())\n  return result;\n}\n\nexport const updateInitalListAfterRemove = (planet, prevList) => {\n  let result = prevList;\n  result.map(item => {\n    if(item.id === planet) {\n      item.isFavourite = false;\n    }\n  })\n  return result;\n}\n","import './App.css';\nimport LandingPage from './components';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LandingPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  ON_SUCCESS_FETCH_PLANET,\n  IS_LOADING,\n  ON_FAILURE_FETCH_PLANET,\n  HANDLE_TAB_SELECTION,\n} from '../constants/ActionsTypes';\nimport {tabName} from '../utils/utils';\n\nconst INITIAL_STATE = {\n  data: [],\n  isLoading: true,\n  tabList: tabName,\n  favList: [],\n  selectedTab: 'All',\n};\n\nexport default function LandingReducers(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case IS_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case ON_SUCCESS_FETCH_PLANET:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case 'HANDLE_TAB_SELECTION':\n      return {\n        ...state,\n        tabList: action.payload.list,\n        selectedTab: action.payload.selectedTab,\n      };\n    case 'ADD_TO_FAV_LIST':\n      return {\n        ...state,\n        favList: action.payload.newFavList,\n        data: action.payload.updatedList,\n      };\n    case 'REMOVE_FAV':\n      return {\n        ...state,\n        favList: action.payload.updatedList,\n        data: action.payload.updatedInitalList,\n      };\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport LandingReducers from './LandingReducers';\n\nexport default combineReducers({\n\tLandingReducers\n})\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport thunks from 'redux-thunk';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from \"react-redux\";\nimport reducer from './reducers';\n\nconst store = createStore(reducer, {}, applyMiddleware(thunks))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}